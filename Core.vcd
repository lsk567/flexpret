$version Generated by VerilatedVcd $end
$date Mon Apr 18 01:25:11 2022
 $end
$timescale   1ps $end

 $scope module TOP $end
  $var wire  1 `" clock $end
  $var wire 10 p" io_bus_addr [9:0] $end
  $var wire 32 t" io_bus_data_in [31:0] $end
  $var wire 32 r" io_bus_data_out [31:0] $end
  $var wire  1 q" io_bus_enable $end
  $var wire  1 s" io_bus_write $end
  $var wire 12 h" io_dmem_addr [11:0] $end
  $var wire  1 k" io_dmem_byte_write_0 $end
  $var wire  1 l" io_dmem_byte_write_1 $end
  $var wire  1 m" io_dmem_byte_write_2 $end
  $var wire  1 n" io_dmem_byte_write_3 $end
  $var wire 32 o" io_dmem_data_in [31:0] $end
  $var wire 32 j" io_dmem_data_out [31:0] $end
  $var wire  1 i" io_dmem_enable $end
  $var wire  1 y" io_gpio_in_0 $end
  $var wire  1 x" io_gpio_in_1 $end
  $var wire  1 w" io_gpio_in_2 $end
  $var wire  1 v" io_gpio_in_3 $end
  $var wire  2 }" io_gpio_out_0 [1:0] $end
  $var wire  2 |" io_gpio_out_1 [1:0] $end
  $var wire  2 {" io_gpio_out_2 [1:0] $end
  $var wire  2 z" io_gpio_out_3 [1:0] $end
  $var wire 32 u" io_host_to_host [31:0] $end
  $var wire 12 b" io_imem_bus_addr [11:0] $end
  $var wire 32 f" io_imem_bus_data_in [31:0] $end
  $var wire 32 d" io_imem_bus_data_out [31:0] $end
  $var wire  1 c" io_imem_bus_enable $end
  $var wire  1 g" io_imem_bus_ready $end
  $var wire  1 e" io_imem_bus_write $end
  $var wire  1 ~" io_int_exts_0 $end
  $var wire  1 !# io_int_exts_1 $end
  $var wire  1 "# io_int_exts_2 $end
  $var wire  1 ## io_int_exts_3 $end
  $var wire  1 $# io_int_exts_4 $end
  $var wire  1 %# io_int_exts_5 $end
  $var wire  1 &# io_int_exts_6 $end
  $var wire  1 '# io_int_exts_7 $end
  $var wire  1 a" reset $end
  $scope module Core $end
   $var wire  1 `" clock $end
   $var wire  1 `" control_clock $end
   $var wire  2 A control_io_csr_tmodes_0 [1:0] $end
   $var wire  3 % control_io_dec_imm_sel [2:0] $end
   $var wire 32 = control_io_dec_inst [31:0] $end
   $var wire  2 & control_io_dec_op1_sel [1:0] $end
   $var wire  2 ' control_io_dec_op2_sel [1:0] $end
   $var wire  2 0 control_io_dec_rs1_sel [1:0] $end
   $var wire  2 1 control_io_dec_rs2_sel [1:0] $end
   $var wire  4 ( control_io_exe_alu_type [3:0] $end
   $var wire  1 > control_io_exe_br_cond $end
   $var wire  3 ) control_io_exe_br_type [2:0] $end
   $var wire  5 7 control_io_exe_cause [4:0] $end
   $var wire  2 * control_io_exe_csr_type [1:0] $end
   $var wire  1 5 control_io_exe_csr_write $end
   $var wire  1 ; control_io_exe_ee $end
   $var wire  1 G control_io_exe_exc_expire $end
   $var wire  1 E control_io_exe_exc_load_misaligned $end
   $var wire  1 F control_io_exe_exc_store_misaligned $end
   $var wire  1 6 control_io_exe_exception $end
   $var wire  1 @ control_io_exe_expire $end
   $var wire  1 : control_io_exe_ie $end
   $var wire  1 H control_io_exe_int_expire $end
   $var wire  1 I control_io_exe_int_ext $end
   $var wire  1 8 control_io_exe_kill $end
   $var wire  1 3 control_io_exe_load $end
   $var wire  4 , control_io_exe_mem_type [3:0] $end
   $var wire  5 ? control_io_exe_rd_addr [4:0] $end
   $var wire  2 + control_io_exe_rd_data_sel [1:0] $end
   $var wire  1 9 control_io_exe_sleep $end
   $var wire  1 4 control_io_exe_store $end
   $var wire  1 2 control_io_exe_valid $end
   $var wire  1 D control_io_if_exc_misaligned $end
   $var wire  5 B control_io_mem_rd_addr [4:0] $end
   $var wire  2 - control_io_mem_rd_data_sel [1:0] $end
   $var wire  1 < control_io_mem_rd_write $end
   $var wire  2 . control_io_next_pc_sel_0 [1:0] $end
   $var wire  1 / control_io_next_valid $end
   $var wire  5 C control_io_wb_rd_addr [4:0] $end
   $var wire  1 a" control_reset $end
   $var wire  1 `" datapath_clock $end
   $var wire 10 Y datapath_io_bus_addr [9:0] $end
   $var wire 32 P datapath_io_bus_data_in [31:0] $end
   $var wire 32 r" datapath_io_bus_data_out [31:0] $end
   $var wire  1 Z datapath_io_bus_enable $end
   $var wire  1 [ datapath_io_bus_write $end
   $var wire  2 A datapath_io_control_csr_tmodes_0 [1:0] $end
   $var wire  3 % datapath_io_control_dec_imm_sel [2:0] $end
   $var wire 32 = datapath_io_control_dec_inst [31:0] $end
   $var wire  2 & datapath_io_control_dec_op1_sel [1:0] $end
   $var wire  2 ' datapath_io_control_dec_op2_sel [1:0] $end
   $var wire  2 0 datapath_io_control_dec_rs1_sel [1:0] $end
   $var wire  2 1 datapath_io_control_dec_rs2_sel [1:0] $end
   $var wire  4 ( datapath_io_control_exe_alu_type [3:0] $end
   $var wire  1 > datapath_io_control_exe_br_cond $end
   $var wire  3 ) datapath_io_control_exe_br_type [2:0] $end
   $var wire  5 7 datapath_io_control_exe_cause [4:0] $end
   $var wire  2 * datapath_io_control_exe_csr_type [1:0] $end
   $var wire  1 5 datapath_io_control_exe_csr_write $end
   $var wire  1 ; datapath_io_control_exe_ee $end
   $var wire  1 G datapath_io_control_exe_exc_expire $end
   $var wire  1 E datapath_io_control_exe_exc_load_misaligned $end
   $var wire  1 F datapath_io_control_exe_exc_store_misaligned $end
   $var wire  1 6 datapath_io_control_exe_exception $end
   $var wire  1 @ datapath_io_control_exe_expire $end
   $var wire  1 : datapath_io_control_exe_ie $end
   $var wire  1 H datapath_io_control_exe_int_expire $end
   $var wire  1 I datapath_io_control_exe_int_ext $end
   $var wire  1 8 datapath_io_control_exe_kill $end
   $var wire  1 3 datapath_io_control_exe_load $end
   $var wire  4 , datapath_io_control_exe_mem_type [3:0] $end
   $var wire  5 ? datapath_io_control_exe_rd_addr [4:0] $end
   $var wire  2 + datapath_io_control_exe_rd_data_sel [1:0] $end
   $var wire  1 9 datapath_io_control_exe_sleep $end
   $var wire  1 4 datapath_io_control_exe_store $end
   $var wire  1 2 datapath_io_control_exe_valid $end
   $var wire  1 D datapath_io_control_if_exc_misaligned $end
   $var wire  5 B datapath_io_control_mem_rd_addr [4:0] $end
   $var wire  2 - datapath_io_control_mem_rd_data_sel [1:0] $end
   $var wire  1 < datapath_io_control_mem_rd_write $end
   $var wire  2 . datapath_io_control_next_pc_sel_0 [1:0] $end
   $var wire  1 / datapath_io_control_next_valid $end
   $var wire  5 C datapath_io_control_wb_rd_addr [4:0] $end
   $var wire 12 Q datapath_io_dmem_addr [11:0] $end
   $var wire  1 T datapath_io_dmem_byte_write_0 $end
   $var wire  1 U datapath_io_dmem_byte_write_1 $end
   $var wire  1 V datapath_io_dmem_byte_write_2 $end
   $var wire  1 W datapath_io_dmem_byte_write_3 $end
   $var wire 32 X datapath_io_dmem_data_in [31:0] $end
   $var wire 32 S datapath_io_dmem_data_out [31:0] $end
   $var wire  1 R datapath_io_dmem_enable $end
   $var wire  1 y" datapath_io_gpio_in_0 $end
   $var wire  1 x" datapath_io_gpio_in_1 $end
   $var wire  1 w" datapath_io_gpio_in_2 $end
   $var wire  1 v" datapath_io_gpio_in_3 $end
   $var wire  2 ` datapath_io_gpio_out_0 [1:0] $end
   $var wire  2 _ datapath_io_gpio_out_1 [1:0] $end
   $var wire  2 ^ datapath_io_gpio_out_2 [1:0] $end
   $var wire  2 ] datapath_io_gpio_out_3 [1:0] $end
   $var wire 32 \ datapath_io_host_to_host [31:0] $end
   $var wire 12 J datapath_io_imem_r_addr [11:0] $end
   $var wire 32 K datapath_io_imem_r_data_out [31:0] $end
   $var wire  1 / datapath_io_imem_r_enable $end
   $var wire 12 L datapath_io_imem_rw_addr [11:0] $end
   $var wire 32 P datapath_io_imem_rw_data_in [31:0] $end
   $var wire 32 N datapath_io_imem_rw_data_out [31:0] $end
   $var wire  1 M datapath_io_imem_rw_enable $end
   $var wire  1 O datapath_io_imem_rw_write $end
   $var wire  1 ~" datapath_io_int_exts_0 $end
   $var wire  1 a" datapath_reset $end
   $var wire  1 `" dmem_clock $end
   $var wire 12 Q dmem_io_core_addr [11:0] $end
   $var wire  1 T dmem_io_core_byte_write_0 $end
   $var wire  1 U dmem_io_core_byte_write_1 $end
   $var wire  1 V dmem_io_core_byte_write_2 $end
   $var wire  1 W dmem_io_core_byte_write_3 $end
   $var wire 32 X dmem_io_core_data_in [31:0] $end
   $var wire 32 S dmem_io_core_data_out [31:0] $end
   $var wire  1 R dmem_io_core_enable $end
   $var wire  1 `" imem_clock $end
   $var wire 12 J imem_io_core_r_addr [11:0] $end
   $var wire 32 K imem_io_core_r_data_out [31:0] $end
   $var wire  1 / imem_io_core_r_enable $end
   $var wire 12 L imem_io_core_rw_addr [11:0] $end
   $var wire 32 P imem_io_core_rw_data_in [31:0] $end
   $var wire 32 N imem_io_core_rw_data_out [31:0] $end
   $var wire  1 M imem_io_core_rw_enable $end
   $var wire  1 O imem_io_core_rw_write $end
   $var wire 10 p" io_bus_addr [9:0] $end
   $var wire 32 t" io_bus_data_in [31:0] $end
   $var wire 32 r" io_bus_data_out [31:0] $end
   $var wire  1 q" io_bus_enable $end
   $var wire  1 s" io_bus_write $end
   $var wire 12 h" io_dmem_addr [11:0] $end
   $var wire  1 k" io_dmem_byte_write_0 $end
   $var wire  1 l" io_dmem_byte_write_1 $end
   $var wire  1 m" io_dmem_byte_write_2 $end
   $var wire  1 n" io_dmem_byte_write_3 $end
   $var wire 32 o" io_dmem_data_in [31:0] $end
   $var wire 32 j" io_dmem_data_out [31:0] $end
   $var wire  1 i" io_dmem_enable $end
   $var wire  1 y" io_gpio_in_0 $end
   $var wire  1 x" io_gpio_in_1 $end
   $var wire  1 w" io_gpio_in_2 $end
   $var wire  1 v" io_gpio_in_3 $end
   $var wire  2 }" io_gpio_out_0 [1:0] $end
   $var wire  2 |" io_gpio_out_1 [1:0] $end
   $var wire  2 {" io_gpio_out_2 [1:0] $end
   $var wire  2 z" io_gpio_out_3 [1:0] $end
   $var wire 32 u" io_host_to_host [31:0] $end
   $var wire 12 b" io_imem_bus_addr [11:0] $end
   $var wire 32 f" io_imem_bus_data_in [31:0] $end
   $var wire 32 d" io_imem_bus_data_out [31:0] $end
   $var wire  1 c" io_imem_bus_enable $end
   $var wire  1 g" io_imem_bus_ready $end
   $var wire  1 e" io_imem_bus_write $end
   $var wire  1 ~" io_int_exts_0 $end
   $var wire  1 !# io_int_exts_1 $end
   $var wire  1 "# io_int_exts_2 $end
   $var wire  1 ## io_int_exts_3 $end
   $var wire  1 $# io_int_exts_4 $end
   $var wire  1 %# io_int_exts_5 $end
   $var wire  1 &# io_int_exts_6 $end
   $var wire  1 '# io_int_exts_7 $end
   $var wire 32 $ lastCycle_tohost [31:0] $end
   $var wire 32 # prev_tohost [31:0] $end
   $var wire  1 a" reset $end
   $scope module control $end
    $var wire  2 o REG [1:0] $end
    $var wire  1 / REG_2 $end
    $var wire  1 v REG_3 $end
    $var wire  1 ,! REG_4 $end
    $var wire  1 -! REG_5 $end
    $var wire  1 `" clock $end
    $var wire  2 j dec_csr_type [1:0] $end
    $var wire  1 c dec_du $end
    $var wire  1 /! dec_exc $end
    $var wire  1 n dec_fence_i $end
    $var wire  1 d dec_ie $end
    $var wire  1 e dec_legal $end
    $var wire  1 m dec_load $end
    $var wire  1 l dec_rd_en $end
    $var wire  1 %! dec_rd_write $end
    $var wire  1 .! dec_reg_exc $end
    $var wire  1 s dec_reg_valid $end
    $var wire  1 b dec_scall $end
    $var wire  1 t dec_stall $end
    $var wire  1 #! dec_valid $end
    $var wire  5 2! exe_any_cause [4:0] $end
    $var wire  1 z exe_any_exc $end
    $var wire  1 ~ exe_brjmp $end
    $var wire  1 w exe_du $end
    $var wire  1 6 exe_exception $end
    $var wire  1 !! exe_flush $end
    $var wire  4 1! exe_inst_cause [3:0] $end
    $var wire  1 y exe_inst_exc $end
    $var wire  4 ( exe_reg_alu_type [3:0] $end
    $var wire  3 ) exe_reg_br_type [2:0] $end
    $var wire  1 } exe_reg_branch $end
    $var wire  3 0! exe_reg_cause [2:0] $end
    $var wire  2 * exe_reg_csr_type [1:0] $end
    $var wire  1 )! exe_reg_csr_write $end
    $var wire  1 x exe_reg_exc $end
    $var wire  1 | exe_reg_jump $end
    $var wire  1 *! exe_reg_load $end
    $var wire  4 , exe_reg_mem_type [3:0] $end
    $var wire  2 + exe_reg_rd_data_sel [1:0] $end
    $var wire  1 &! exe_reg_rd_write $end
    $var wire  1 +! exe_reg_store $end
    $var wire  1 2 exe_reg_valid $end
    $var wire  1 9 exe_sleep $end
    $var wire  1 { exe_valid $end
    $var wire  2 f hi [1:0] $end
    $var wire  2 h hi_1 [1:0] $end
    $var wire  2 i hi_2 [1:0] $end
    $var wire  2 k hi_3 [1:0] $end
    $var wire  1 u if_pre_valid $end
    $var wire  1 r if_reg_valid $end
    $var wire  1 "! if_valid $end
    $var wire  2 A io_csr_tmodes_0 [1:0] $end
    $var wire  3 % io_dec_imm_sel [2:0] $end
    $var wire 32 = io_dec_inst [31:0] $end
    $var wire  2 & io_dec_op1_sel [1:0] $end
    $var wire  2 ' io_dec_op2_sel [1:0] $end
    $var wire  2 0 io_dec_rs1_sel [1:0] $end
    $var wire  2 1 io_dec_rs2_sel [1:0] $end
    $var wire  4 ( io_exe_alu_type [3:0] $end
    $var wire  1 > io_exe_br_cond $end
    $var wire  3 ) io_exe_br_type [2:0] $end
    $var wire  5 7 io_exe_cause [4:0] $end
    $var wire  2 * io_exe_csr_type [1:0] $end
    $var wire  1 5 io_exe_csr_write $end
    $var wire  1 ; io_exe_ee $end
    $var wire  1 G io_exe_exc_expire $end
    $var wire  1 E io_exe_exc_load_misaligned $end
    $var wire  1 F io_exe_exc_store_misaligned $end
    $var wire  1 6 io_exe_exception $end
    $var wire  1 @ io_exe_expire $end
    $var wire  1 : io_exe_ie $end
    $var wire  1 H io_exe_int_expire $end
    $var wire  1 I io_exe_int_ext $end
    $var wire  1 8 io_exe_kill $end
    $var wire  1 3 io_exe_load $end
    $var wire  4 , io_exe_mem_type [3:0] $end
    $var wire  5 ? io_exe_rd_addr [4:0] $end
    $var wire  2 + io_exe_rd_data_sel [1:0] $end
    $var wire  1 9 io_exe_sleep $end
    $var wire  1 4 io_exe_store $end
    $var wire  1 2 io_exe_valid $end
    $var wire  1 D io_if_exc_misaligned $end
    $var wire  5 B io_mem_rd_addr [4:0] $end
    $var wire  2 - io_mem_rd_data_sel [1:0] $end
    $var wire  1 < io_mem_rd_write $end
    $var wire  2 . io_next_pc_sel_0 [1:0] $end
    $var wire  1 / io_next_valid $end
    $var wire  5 C io_wb_rd_addr [4:0] $end
    $var wire  2 g lo [1:0] $end
    $var wire  1 p mem_reg_exception $end
    $var wire  2 - mem_reg_rd_data_sel [1:0] $end
    $var wire  1 '! mem_reg_rd_write $end
    $var wire  1 $! mem_reg_valid $end
    $var wire  1 a" reset $end
    $var wire  2 A scheduler_io_thread_modes_0 [1:0] $end
    $var wire  1 a scheduler_io_valid $end
    $var wire  2 q stall_count_0 [1:0] $end
    $var wire  1 (! wb_reg_rd_write $end
    $scope module scheduler $end
     $var wire  2 A io_thread_modes_0 [1:0] $end
     $var wire  1 a io_valid $end
    $upscope $end
   $upscope $end
   $scope module datapath $end
    $var wire  4 ( alu_io_func [3:0] $end
    $var wire 32 7! alu_io_op1 [31:0] $end
    $var wire 32 8! alu_io_op2 [31:0] $end
    $var wire 32 :! alu_io_result [31:0] $end
    $var wire  4 9! alu_io_shift [3:0] $end
    $var wire  1 `" clock $end
    $var wire  1 `" csr_clock $end
    $var wire  5 7 csr_io_cause [4:0] $end
    $var wire  1 ; csr_io_ee $end
    $var wire 32 >! csr_io_epc [31:0] $end
    $var wire 32 ?! csr_io_evecs_0 [31:0] $end
    $var wire  1 G csr_io_exc_expire $end
    $var wire  1 6 csr_io_exception $end
    $var wire  1 @ csr_io_expire $end
    $var wire  1 y" csr_io_gpio_in_0 $end
    $var wire  1 x" csr_io_gpio_in_1 $end
    $var wire  1 w" csr_io_gpio_in_2 $end
    $var wire  1 v" csr_io_gpio_in_3 $end
    $var wire  2 ` csr_io_gpio_out_0 [1:0] $end
    $var wire  2 _ csr_io_gpio_out_1 [1:0] $end
    $var wire  2 ^ csr_io_gpio_out_2 [1:0] $end
    $var wire  2 ] csr_io_gpio_out_3 [1:0] $end
    $var wire 32 \ csr_io_host_to_host [31:0] $end
    $var wire  1 : csr_io_ie $end
    $var wire  1 H csr_io_int_expire $end
    $var wire  1 I csr_io_int_ext $end
    $var wire  1 ~" csr_io_int_exts_0 $end
    $var wire  1 8 csr_io_kill $end
    $var wire 12 ;! csr_io_rw_addr [11:0] $end
    $var wire  2 * csr_io_rw_csr_type [1:0] $end
    $var wire 32 <! csr_io_rw_data_in [31:0] $end
    $var wire 32 =! csr_io_rw_data_out [31:0] $end
    $var wire  1 2 csr_io_rw_valid $end
    $var wire  1 5 csr_io_rw_write $end
    $var wire  1 9 csr_io_sleep $end
    $var wire  2 A csr_io_tmodes_0 [1:0] $end
    $var wire  1 a" csr_reset $end
    $var wire 32 L! dec_imm_b [31:0] $end
    $var wire 32 J! dec_imm_i [31:0] $end
    $var wire 32 N! dec_imm_j [31:0] $end
    $var wire 32 K! dec_imm_s [31:0] $end
    $var wire 32 M! dec_imm_u [31:0] $end
    $var wire 32 O! dec_imm_z [31:0] $end
    $var wire 32 = dec_reg_inst [31:0] $end
    $var wire 32 A! dec_reg_pc [31:0] $end
    $var wire 32 B! dec_reg_pc4 [31:0] $end
    $var wire 32 :! exe_alu_result [31:0] $end
    $var wire 32 <! exe_csr_data [31:0] $end
    $var wire  1 R! exe_eq $end
    $var wire  1 P! exe_lt $end
    $var wire  1 Q! exe_ltu $end
    $var wire 32 I! exe_rd_data [31:0] $end
    $var wire 12 ;! exe_reg_csr_addr [11:0] $end
    $var wire 32 7! exe_reg_op1 [31:0] $end
    $var wire 32 8! exe_reg_op2 [31:0] $end
    $var wire 32 >! exe_reg_pc [31:0] $end
    $var wire 32 D! exe_reg_pc4 [31:0] $end
    $var wire  5 ? exe_reg_rd_addr [4:0] $end
    $var wire 32 C! exe_reg_rs1_data [31:0] $end
    $var wire 32 P exe_reg_rs2_data [31:0] $end
    $var wire 32 G! if_pc_plus4 [31:0] $end
    $var wire 32 @! if_reg_pcs_0 [31:0] $end
    $var wire 10 Y io_bus_addr [9:0] $end
    $var wire 32 P io_bus_data_in [31:0] $end
    $var wire 32 r" io_bus_data_out [31:0] $end
    $var wire  1 Z io_bus_enable $end
    $var wire  1 [ io_bus_write $end
    $var wire  2 A io_control_csr_tmodes_0 [1:0] $end
    $var wire  3 % io_control_dec_imm_sel [2:0] $end
    $var wire 32 = io_control_dec_inst [31:0] $end
    $var wire  2 & io_control_dec_op1_sel [1:0] $end
    $var wire  2 ' io_control_dec_op2_sel [1:0] $end
    $var wire  2 0 io_control_dec_rs1_sel [1:0] $end
    $var wire  2 1 io_control_dec_rs2_sel [1:0] $end
    $var wire  4 ( io_control_exe_alu_type [3:0] $end
    $var wire  1 > io_control_exe_br_cond $end
    $var wire  3 ) io_control_exe_br_type [2:0] $end
    $var wire  5 7 io_control_exe_cause [4:0] $end
    $var wire  2 * io_control_exe_csr_type [1:0] $end
    $var wire  1 5 io_control_exe_csr_write $end
    $var wire  1 ; io_control_exe_ee $end
    $var wire  1 G io_control_exe_exc_expire $end
    $var wire  1 E io_control_exe_exc_load_misaligned $end
    $var wire  1 F io_control_exe_exc_store_misaligned $end
    $var wire  1 6 io_control_exe_exception $end
    $var wire  1 @ io_control_exe_expire $end
    $var wire  1 : io_control_exe_ie $end
    $var wire  1 H io_control_exe_int_expire $end
    $var wire  1 I io_control_exe_int_ext $end
    $var wire  1 8 io_control_exe_kill $end
    $var wire  1 3 io_control_exe_load $end
    $var wire  4 , io_control_exe_mem_type [3:0] $end
    $var wire  5 ? io_control_exe_rd_addr [4:0] $end
    $var wire  2 + io_control_exe_rd_data_sel [1:0] $end
    $var wire  1 9 io_control_exe_sleep $end
    $var wire  1 4 io_control_exe_store $end
    $var wire  1 2 io_control_exe_valid $end
    $var wire  1 D io_control_if_exc_misaligned $end
    $var wire  5 B io_control_mem_rd_addr [4:0] $end
    $var wire  2 - io_control_mem_rd_data_sel [1:0] $end
    $var wire  1 < io_control_mem_rd_write $end
    $var wire  2 . io_control_next_pc_sel_0 [1:0] $end
    $var wire  1 / io_control_next_valid $end
    $var wire  5 C io_control_wb_rd_addr [4:0] $end
    $var wire 12 Q io_dmem_addr [11:0] $end
    $var wire  1 T io_dmem_byte_write_0 $end
    $var wire  1 U io_dmem_byte_write_1 $end
    $var wire  1 V io_dmem_byte_write_2 $end
    $var wire  1 W io_dmem_byte_write_3 $end
    $var wire 32 X io_dmem_data_in [31:0] $end
    $var wire 32 S io_dmem_data_out [31:0] $end
    $var wire  1 R io_dmem_enable $end
    $var wire  1 y" io_gpio_in_0 $end
    $var wire  1 x" io_gpio_in_1 $end
    $var wire  1 w" io_gpio_in_2 $end
    $var wire  1 v" io_gpio_in_3 $end
    $var wire  2 ` io_gpio_out_0 [1:0] $end
    $var wire  2 _ io_gpio_out_1 [1:0] $end
    $var wire  2 ^ io_gpio_out_2 [1:0] $end
    $var wire  2 ] io_gpio_out_3 [1:0] $end
    $var wire 32 \ io_host_to_host [31:0] $end
    $var wire 12 J io_imem_r_addr [11:0] $end
    $var wire 32 K io_imem_r_data_out [31:0] $end
    $var wire  1 / io_imem_r_enable $end
    $var wire 12 L io_imem_rw_addr [11:0] $end
    $var wire 32 P io_imem_rw_data_in [31:0] $end
    $var wire 32 N io_imem_rw_data_out [31:0] $end
    $var wire  1 M io_imem_rw_enable $end
    $var wire  1 O io_imem_rw_write $end
    $var wire  1 ~" io_int_exts_0 $end
    $var wire  1 `" loadstore_clock $end
    $var wire 32 :! loadstore_io_addr [31:0] $end
    $var wire 10 Y loadstore_io_bus_addr [9:0] $end
    $var wire 32 P loadstore_io_bus_data_in [31:0] $end
    $var wire 32 r" loadstore_io_bus_data_out [31:0] $end
    $var wire  1 Z loadstore_io_bus_enable $end
    $var wire  1 [ loadstore_io_bus_write $end
    $var wire 32 P loadstore_io_data_in [31:0] $end
    $var wire 32 )# loadstore_io_data_out [31:0] $end
    $var wire 12 Q loadstore_io_dmem_addr [11:0] $end
    $var wire  1 T loadstore_io_dmem_byte_write_0 $end
    $var wire  1 U loadstore_io_dmem_byte_write_1 $end
    $var wire  1 V loadstore_io_dmem_byte_write_2 $end
    $var wire  1 W loadstore_io_dmem_byte_write_3 $end
    $var wire 32 X loadstore_io_dmem_data_in [31:0] $end
    $var wire 32 S loadstore_io_dmem_data_out [31:0] $end
    $var wire  1 R loadstore_io_dmem_enable $end
    $var wire 12 L loadstore_io_imem_rw_addr [11:0] $end
    $var wire 32 P loadstore_io_imem_rw_data_in [31:0] $end
    $var wire 32 N loadstore_io_imem_rw_data_out [31:0] $end
    $var wire  1 M loadstore_io_imem_rw_enable $end
    $var wire  1 O loadstore_io_imem_rw_write $end
    $var wire  1 8 loadstore_io_kill $end
    $var wire  1 3 loadstore_io_load $end
    $var wire  1 E loadstore_io_load_misaligned $end
    $var wire  4 , loadstore_io_mem_type [3:0] $end
    $var wire  1 4 loadstore_io_store $end
    $var wire  1 F loadstore_io_store_misaligned $end
    $var wire  1 a" loadstore_reset $end
    $var wire 32 ?! mem_evec [31:0] $end
    $var wire 32 *# mem_rd_data [31:0] $end
    $var wire  5 B mem_reg_rd_addr [4:0] $end
    $var wire 32 E! mem_reg_rd_data [31:0] $end
    $var wire 32 H! next_pcs_0 [31:0] $end
    $var wire  1 `" regfile_clock $end
    $var wire  5 3! regfile_io_read_0_addr [4:0] $end
    $var wire 32 4! regfile_io_read_0_data [31:0] $end
    $var wire  5 5! regfile_io_read_1_addr [4:0] $end
    $var wire 32 6! regfile_io_read_1_data [31:0] $end
    $var wire  5 B regfile_io_write_0_addr [4:0] $end
    $var wire 32 (# regfile_io_write_0_data [31:0] $end
    $var wire  1 < regfile_io_write_0_enable $end
    $var wire  1 a" reset $end
    $var wire  5 C wb_reg_rd_addr [4:0] $end
    $var wire 32 F! wb_reg_rd_data [31:0] $end
    $scope module alu $end
     $var wire  4 ( io_func [3:0] $end
     $var wire 32 7! io_op1 [31:0] $end
     $var wire 32 8! io_op2 [31:0] $end
     $var wire 32 :! io_result [31:0] $end
     $var wire  4 9! io_shift [3:0] $end
    $upscope $end
    $scope module csr $end
     $var wire  1 `" clock $end
     $var wire 36 E" data_in [35:0] $end
     $var wire 36 C" data_out [35:0] $end
     $var wire  1 H" exc_expire $end
     $var wire  1 @ expired_0 $end
     $var wire  5 7 io_cause [4:0] $end
     $var wire  1 ; io_ee $end
     $var wire 32 >! io_epc [31:0] $end
     $var wire 32 ?! io_evecs_0 [31:0] $end
     $var wire  1 G io_exc_expire $end
     $var wire  1 6 io_exception $end
     $var wire  1 @ io_expire $end
     $var wire  1 y" io_gpio_in_0 $end
     $var wire  1 x" io_gpio_in_1 $end
     $var wire  1 w" io_gpio_in_2 $end
     $var wire  1 v" io_gpio_in_3 $end
     $var wire  2 ` io_gpio_out_0 [1:0] $end
     $var wire  2 _ io_gpio_out_1 [1:0] $end
     $var wire  2 ^ io_gpio_out_2 [1:0] $end
     $var wire  2 ] io_gpio_out_3 [1:0] $end
     $var wire 32 \ io_host_to_host [31:0] $end
     $var wire  1 : io_ie $end
     $var wire  1 H io_int_expire $end
     $var wire  1 I io_int_ext $end
     $var wire  1 ~" io_int_exts_0 $end
     $var wire  1 8 io_kill $end
     $var wire 12 ;! io_rw_addr [11:0] $end
     $var wire  2 * io_rw_csr_type [1:0] $end
     $var wire 32 <! io_rw_data_in [31:0] $end
     $var wire 32 =! io_rw_data_out [31:0] $end
     $var wire  1 2 io_rw_valid $end
     $var wire  1 5 io_rw_write $end
     $var wire  1 9 io_sleep $end
     $var wire  2 A io_tmodes_0 [1:0] $end
     $var wire  5 3" reg_causes_0 [4:0] $end
     $var wire 32 8" reg_compare_0 [31:0] $end
     $var wire 32 2" reg_epcs_0 [31:0] $end
     $var wire 36 0" reg_evecs_0 [35:0] $end
     $var wire  1 9" reg_gpis_0 $end
     $var wire  1 :" reg_gpis_1 $end
     $var wire  1 ;" reg_gpis_2 $end
     $var wire  1 <" reg_gpis_3 $end
     $var wire  2 ` reg_gpos_0 [1:0] $end
     $var wire  2 _ reg_gpos_1 [1:0] $end
     $var wire  2 ^ reg_gpos_2 [1:0] $end
     $var wire  2 ] reg_gpos_3 [1:0] $end
     $var wire  1 >" reg_ie_0 $end
     $var wire  1 ?" reg_msip_0 $end
     $var wire  1 =" reg_mtie_0 $end
     $var wire 36 4" reg_sup0_0 [35:0] $end
     $var wire 64 6" reg_time [63:0] $end
     $var wire  2 @" reg_timer_0 [1:0] $end
     $var wire  2 A reg_tmodes_0 [1:0] $end
     $var wire 32 \ reg_to_host [31:0] $end
     $var wire  1 a" reset $end
     $var wire 36 A" status_0 [35:0] $end
     $var wire  1 +# wake_0 $end
     $var wire  1 G" write $end
    $upscope $end
    $scope module loadstore $end
     $var wire  2 &" addr_byte_reg [1:0] $end
     $var wire  1 *" bus_op $end
     $var wire  1 `" clock $end
     $var wire  1 /" dmem_enable $end
     $var wire  1 (" dmem_op $end
     $var wire  1 ," dmem_op_reg $end
     $var wire  1 )" imem_op $end
     $var wire  1 -" imem_op_reg $end
     $var wire 32 :! io_addr [31:0] $end
     $var wire 10 Y io_bus_addr [9:0] $end
     $var wire 32 P io_bus_data_in [31:0] $end
     $var wire 32 r" io_bus_data_out [31:0] $end
     $var wire  1 Z io_bus_enable $end
     $var wire  1 [ io_bus_write $end
     $var wire 32 P io_data_in [31:0] $end
     $var wire 32 )# io_data_out [31:0] $end
     $var wire 12 Q io_dmem_addr [11:0] $end
     $var wire  1 T io_dmem_byte_write_0 $end
     $var wire  1 U io_dmem_byte_write_1 $end
     $var wire  1 V io_dmem_byte_write_2 $end
     $var wire  1 W io_dmem_byte_write_3 $end
     $var wire 32 X io_dmem_data_in [31:0] $end
     $var wire 32 S io_dmem_data_out [31:0] $end
     $var wire  1 R io_dmem_enable $end
     $var wire 12 L io_imem_rw_addr [11:0] $end
     $var wire 32 P io_imem_rw_data_in [31:0] $end
     $var wire 32 N io_imem_rw_data_out [31:0] $end
     $var wire  1 M io_imem_rw_enable $end
     $var wire  1 O io_imem_rw_write $end
     $var wire  1 8 io_kill $end
     $var wire  1 3 io_load $end
     $var wire  1 E io_load_misaligned $end
     $var wire  4 , io_mem_type [3:0] $end
     $var wire  1 4 io_store $end
     $var wire  1 F io_store_misaligned $end
     $var wire  4 '" mem_type_reg [3:0] $end
     $var wire  1 a" reset $end
     $var wire  1 +" store_misaligned $end
     $var wire  1 ." write $end
    $upscope $end
    $scope module regfile $end
     $var wire  5 z! REG_1 [4:0] $end
     $var wire  1 $" REG_10 $end
     $var wire  5 %" REG_11 [4:0] $end
     $var wire 32 {! REG_2 [31:0] $end
     $var wire  1 |! REG_3 $end
     $var wire  1 }! REG_4 $end
     $var wire  5 ~! REG_5 [4:0] $end
     $var wire  5 !" REG_7 [4:0] $end
     $var wire 32 "" REG_8 [31:0] $end
     $var wire  1 #" REG_9 $end
     $var wire  1 `" clock $end
     $var wire  5 3! io_read_0_addr [4:0] $end
     $var wire 32 4! io_read_0_data [31:0] $end
     $var wire  5 5! io_read_1_addr [4:0] $end
     $var wire 32 6! io_read_1_data [31:0] $end
     $var wire  5 B io_write_0_addr [4:0] $end
     $var wire 32 (# io_write_0_data [31:0] $end
     $var wire  1 < io_write_0_enable $end
     $var wire 32 S! regfile(0) [31:0] $end
     $var wire 32 T! regfile(1) [31:0] $end
     $var wire 32 ]! regfile(10) [31:0] $end
     $var wire 32 ^! regfile(11) [31:0] $end
     $var wire 32 _! regfile(12) [31:0] $end
     $var wire 32 `! regfile(13) [31:0] $end
     $var wire 32 a! regfile(14) [31:0] $end
     $var wire 32 b! regfile(15) [31:0] $end
     $var wire 32 c! regfile(16) [31:0] $end
     $var wire 32 d! regfile(17) [31:0] $end
     $var wire 32 e! regfile(18) [31:0] $end
     $var wire 32 f! regfile(19) [31:0] $end
     $var wire 32 U! regfile(2) [31:0] $end
     $var wire 32 g! regfile(20) [31:0] $end
     $var wire 32 h! regfile(21) [31:0] $end
     $var wire 32 i! regfile(22) [31:0] $end
     $var wire 32 j! regfile(23) [31:0] $end
     $var wire 32 k! regfile(24) [31:0] $end
     $var wire 32 l! regfile(25) [31:0] $end
     $var wire 32 m! regfile(26) [31:0] $end
     $var wire 32 n! regfile(27) [31:0] $end
     $var wire 32 o! regfile(28) [31:0] $end
     $var wire 32 p! regfile(29) [31:0] $end
     $var wire 32 V! regfile(3) [31:0] $end
     $var wire 32 q! regfile(30) [31:0] $end
     $var wire 32 r! regfile(31) [31:0] $end
     $var wire 32 W! regfile(4) [31:0] $end
     $var wire 32 X! regfile(5) [31:0] $end
     $var wire 32 Y! regfile(6) [31:0] $end
     $var wire 32 Z! regfile(7) [31:0] $end
     $var wire 32 [! regfile(8) [31:0] $end
     $var wire 32 \! regfile(9) [31:0] $end
     $var wire  5 v! regfile_MPORT_1_addr [4:0] $end
     $var wire  5 v! regfile_MPORT_1_addr_pipe_0 [4:0] $end
     $var wire 32 u! regfile_MPORT_1_data [31:0] $end
     $var wire  1 y! regfile_MPORT_1_en_pipe_0 $end
     $var wire  5 B regfile_MPORT_2_addr [4:0] $end
     $var wire 32 (# regfile_MPORT_2_data [31:0] $end
     $var wire  1 w! regfile_MPORT_2_en $end
     $var wire  1 ,# regfile_MPORT_2_mask $end
     $var wire  5 t! regfile_MPORT_addr [4:0] $end
     $var wire  5 t! regfile_MPORT_addr_pipe_0 [4:0] $end
     $var wire 32 s! regfile_MPORT_data [31:0] $end
     $var wire  1 x! regfile_MPORT_en_pipe_0 $end
    $upscope $end
   $upscope $end
   $scope module dmem $end
    $var wire  1 `" clock $end
    $var wire 12 Q dspm_0_MPORT_addr [11:0] $end
    $var wire  8 P" dspm_0_MPORT_data [7:0] $end
    $var wire  1 ,# dspm_0_MPORT_en $end
    $var wire  1 T dspm_0_MPORT_mask $end
    $var wire 12 O" dspm_0_corePort_addr [11:0] $end
    $var wire 12 O" dspm_0_corePort_addr_pipe_0 [11:0] $end
    $var wire  8 N" dspm_0_corePort_data [7:0] $end
    $var wire  1 Q" dspm_0_corePort_en_pipe_0 $end
    $var wire 12 Q dspm_1_MPORT_addr [11:0] $end
    $var wire  8 T" dspm_1_MPORT_data [7:0] $end
    $var wire  1 ,# dspm_1_MPORT_en $end
    $var wire  1 U dspm_1_MPORT_mask $end
    $var wire 12 S" dspm_1_corePort_addr [11:0] $end
    $var wire 12 S" dspm_1_corePort_addr_pipe_0 [11:0] $end
    $var wire  8 R" dspm_1_corePort_data [7:0] $end
    $var wire  1 U" dspm_1_corePort_en_pipe_0 $end
    $var wire 12 Q dspm_2_MPORT_addr [11:0] $end
    $var wire  8 X" dspm_2_MPORT_data [7:0] $end
    $var wire  1 ,# dspm_2_MPORT_en $end
    $var wire  1 V dspm_2_MPORT_mask $end
    $var wire 12 W" dspm_2_corePort_addr [11:0] $end
    $var wire 12 W" dspm_2_corePort_addr_pipe_0 [11:0] $end
    $var wire  8 V" dspm_2_corePort_data [7:0] $end
    $var wire  1 Y" dspm_2_corePort_en_pipe_0 $end
    $var wire 12 Q dspm_3_MPORT_addr [11:0] $end
    $var wire  8 \" dspm_3_MPORT_data [7:0] $end
    $var wire  1 ,# dspm_3_MPORT_en $end
    $var wire  1 W dspm_3_MPORT_mask $end
    $var wire 12 [" dspm_3_corePort_addr [11:0] $end
    $var wire 12 [" dspm_3_corePort_addr_pipe_0 [11:0] $end
    $var wire  8 Z" dspm_3_corePort_data [7:0] $end
    $var wire  1 ]" dspm_3_corePort_en_pipe_0 $end
    $var wire 16 _" hi [15:0] $end
    $var wire 12 Q io_core_addr [11:0] $end
    $var wire  1 T io_core_byte_write_0 $end
    $var wire  1 U io_core_byte_write_1 $end
    $var wire  1 V io_core_byte_write_2 $end
    $var wire  1 W io_core_byte_write_3 $end
    $var wire 32 X io_core_data_in [31:0] $end
    $var wire 32 S io_core_data_out [31:0] $end
    $var wire  1 R io_core_enable $end
    $var wire 16 ^" lo [15:0] $end
   $upscope $end
   $scope module imem $end
    $var wire  1 `" clock $end
    $var wire 12 J io_core_r_addr [11:0] $end
    $var wire 32 K io_core_r_data_out [31:0] $end
    $var wire  1 / io_core_r_enable $end
    $var wire 12 L io_core_rw_addr [11:0] $end
    $var wire 32 P io_core_rw_data_in [31:0] $end
    $var wire 32 N io_core_rw_data_out [31:0] $end
    $var wire  1 M io_core_rw_enable $end
    $var wire  1 O io_core_rw_write $end
    $var wire 12 J" ispm_MPORT_2_r_addr [11:0] $end
    $var wire 12 J" ispm_MPORT_2_r_addr_pipe_0 [11:0] $end
    $var wire 32 N ispm_MPORT_2_r_data [31:0] $end
    $var wire  1 M" ispm_MPORT_2_r_en_pipe_0 $end
    $var wire 12 L ispm_MPORT_2_w_addr [11:0] $end
    $var wire 32 P ispm_MPORT_2_w_data [31:0] $end
    $var wire  1 K" ispm_MPORT_2_w_en $end
    $var wire  1 K" ispm_MPORT_2_w_mask $end
    $var wire 12 I" ispm_MPORT_addr [11:0] $end
    $var wire 12 I" ispm_MPORT_addr_pipe_0 [11:0] $end
    $var wire 32 K ispm_MPORT_data [31:0] $end
    $var wire  1 L" ispm_MPORT_en_pipe_0 $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


