
/home/lfvmu/lf_flexpret/flexpret/programs/tests/c/bin/fib:     file format elf32-littleriscv


Disassembly of section .text:

00000000 <_start>:
.globl _start
.type _start,@function

_start:
  // set stack pointer
  li sp, 0x20001000
   0:	20001137          	lui	sp,0x20001

  .option push
  .option norelax
  la gp, __global_pointer$
   4:	00002197          	auipc	gp,0x2
   8:	92c18193          	addi	gp,gp,-1748 # 1930 <__global_pointer$>
  .option pop

  // set argc, argv
  li a0, 0
   c:	00000513          	li	a0,0
  li a1, 0
  10:	00000593          	li	a1,0

  // jump to main
  call main
  14:	0e4000ef          	jal	ra,f8 <main>

00000018 <_fp_print>:

// Write a generic value to the tohost CSR
static inline void write_tohost(uint32_t val) { write_csr(CSR_TOHOST, val); }

// Print the given value in the simulation
static inline void _fp_print(uint32_t val) {
  18:	fe010113          	addi	sp,sp,-32 # 20000fe0 <__global_pointer$+0x1ffff6b0>
  1c:	00812e23          	sw	s0,28(sp)
  20:	02010413          	addi	s0,sp,32
  24:	fea42623          	sw	a0,-20(s0)
  write_csr(CSR_TOHOST, 0xbaaabaaa);
  28:	baaac7b7          	lui	a5,0xbaaac
  2c:	aaa78793          	addi	a5,a5,-1366 # baaabaaa <__global_pointer$+0xbaaaa17a>
  30:	51e79073          	csrw	0x51e,a5
  write_csr(CSR_TOHOST, val);
  34:	fec42783          	lw	a5,-20(s0)
  38:	51e79073          	csrw	0x51e,a5
}
  3c:	00000013          	nop
  40:	01c12403          	lw	s0,28(sp)
  44:	02010113          	addi	sp,sp,32
  48:	00008067          	ret

0000004c <_fp_finish>:

// Finish/stop the simulation
static inline void _fp_finish() {
  4c:	ff010113          	addi	sp,sp,-16
  50:	00812623          	sw	s0,12(sp)
  54:	01010413          	addi	s0,sp,16
  write_csr(CSR_TOHOST, 0xdeaddead);
  58:	deade7b7          	lui	a5,0xdeade
  5c:	ead78793          	addi	a5,a5,-339 # deaddead <__global_pointer$+0xdeadc57d>
  60:	51e79073          	csrw	0x51e,a5
}
  64:	00000013          	nop
  68:	00c12403          	lw	s0,12(sp)
  6c:	01010113          	addi	sp,sp,16
  70:	00008067          	ret

00000074 <fib>:
#include <stdint.h>
#include <flexpret_io.h>

// A humble Fibonacci function.
uint32_t fib(uint32_t n) {
  74:	fd010113          	addi	sp,sp,-48
  78:	02812623          	sw	s0,44(sp)
  7c:	03010413          	addi	s0,sp,48
  80:	fca42e23          	sw	a0,-36(s0)
    if (n == 0) return 0;
  84:	fdc42783          	lw	a5,-36(s0)
  88:	00079663          	bnez	a5,94 <fib+0x20>
  8c:	00000793          	li	a5,0
  90:	0580006f          	j	e8 <fib+0x74>
    n--;
  94:	fdc42783          	lw	a5,-36(s0)
  98:	fff78793          	addi	a5,a5,-1
  9c:	fcf42e23          	sw	a5,-36(s0)
    uint32_t a = 0;
  a0:	fe042623          	sw	zero,-20(s0)
    uint32_t b = 1;
  a4:	00100793          	li	a5,1
  a8:	fef42423          	sw	a5,-24(s0)
    while(n > 0) {
  ac:	0300006f          	j	dc <fib+0x68>
        uint32_t new_b = a + b;
  b0:	fec42703          	lw	a4,-20(s0)
  b4:	fe842783          	lw	a5,-24(s0)
  b8:	00f707b3          	add	a5,a4,a5
  bc:	fef42223          	sw	a5,-28(s0)
        a = b;
  c0:	fe842783          	lw	a5,-24(s0)
  c4:	fef42623          	sw	a5,-20(s0)
        b = new_b;
  c8:	fe442783          	lw	a5,-28(s0)
  cc:	fef42423          	sw	a5,-24(s0)
        n--;
  d0:	fdc42783          	lw	a5,-36(s0)
  d4:	fff78793          	addi	a5,a5,-1
  d8:	fcf42e23          	sw	a5,-36(s0)
    while(n > 0) {
  dc:	fdc42783          	lw	a5,-36(s0)
  e0:	fc0798e3          	bnez	a5,b0 <fib+0x3c>
    }
    return b;
  e4:	fe842783          	lw	a5,-24(s0)
}
  e8:	00078513          	mv	a0,a5
  ec:	02c12403          	lw	s0,44(sp)
  f0:	03010113          	addi	sp,sp,48
  f4:	00008067          	ret

000000f8 <main>:

int main() {
  f8:	fe010113          	addi	sp,sp,-32
  fc:	00112e23          	sw	ra,28(sp)
 100:	00812c23          	sw	s0,24(sp)
 104:	02010413          	addi	s0,sp,32
    // Print an equivalent of "hello world"
    // FIXME: bug #25. For unknown reasons this causes the next print to
    // fail.
    //~ _fp_print(888168);

    const uint32_t x = fib(16);
 108:	01000513          	li	a0,16
 10c:	f69ff0ef          	jal	ra,74 <fib>
 110:	fea42623          	sw	a0,-20(s0)
    _fp_print(x);
 114:	fec42503          	lw	a0,-20(s0)
 118:	f01ff0ef          	jal	ra,18 <_fp_print>

    _fp_print(888168);
 11c:	000d97b7          	lui	a5,0xd9
 120:	d6878513          	addi	a0,a5,-664 # d8d68 <__global_pointer$+0xd7438>
 124:	ef5ff0ef          	jal	ra,18 <_fp_print>

    // Terminate the simulation.
    // Put a while loop to make sure no unwanted side effects.
    _fp_finish();
 128:	f25ff0ef          	jal	ra,4c <_fp_finish>
    while(1) {}
 12c:	0000006f          	j	12c <main+0x34>
